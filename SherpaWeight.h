////////////////////////////////////////////////////////////////////////////////////////////////////
//  SherpaWeight.h
////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef SHERPAWEIGHT_H
#define SHERPAWEIGHT_H

#include "common.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
// forward declarations

namespace ATOOLS
{

template<typename>
class Vec4;

typedef Vec4<double>            Vec4D;
typedef std::vector<Vec4D>      Vec4D_Vector;

}

////////////////////////////////////////////////////////////////////////////////////////////////////
// class SherpaWeight
////////////////////////////////////////////////////////////////////////////////////////////////////

class SherpaWeight
{
public:
    SherpaWeight();
    ~SherpaWeight() throw();

    void Initialize( const std::vector<const char *> & argv );

    void ProcessEvent( int32_t eventId, size_t nInParticles, const std::vector<int> & particleCodes, const ATOOLS::Vec4D_Vector & particleMomenta );

private:
    std::vector<const char *>   m_argv;

private:
    SherpaWeight(const SherpaWeight &) = delete;
    SherpaWeight & operator=(const SherpaWeight &) = delete;
};

////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // SHERPAWEIGHT_H
